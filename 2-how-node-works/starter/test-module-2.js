exports.add = (a, b) => a + b;
exports.multiply = (a, b) => a * b;
exports.divide = (a, b) => a / b;
// and now let's see how and when we can use the exports shorthand that I also mentioned in the previous video. So let's just create a simple comment here, module.exports. Then here just exports. So a new module test, and again, module-2.js. And so the alternative for doing module.exports is to add properties to the exports object itself. So we could do it like this, and using again the calculator example from before, we could do it like this. So we can simply add properties to the exports object. So a and b will return a plus b, exports.multiply a, b will return a times b, and now let's just duplicate just for the sake of completeness again, and okay. So we created basically three anonymous functions here, these three, and assigned them to three properties of exports. And so now when we export this module on the other side, so in modules.js, we will get basically access to this exports object. So let me show that to you. So let's say const calc2 is require. Again, don't forget the dot and slash, because it is our own module. Okay, and so now this calc2 here is the exports object. Okay, so let me show that to you. Console.log, calc2.add, two and five. So that should give us the exact same result as before.
